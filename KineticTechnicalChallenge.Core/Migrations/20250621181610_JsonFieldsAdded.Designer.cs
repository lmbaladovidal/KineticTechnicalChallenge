// <auto-generated />
using System;
using KineticTechnicalChallenge.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KineticTechnicalChallenge.Core.Migrations
{
    [DbContext(typeof(DocumentContext))]
    [Migration("20250621181610_JsonFieldsAdded")]
    partial class JsonFieldsAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("KineticTechnicalChallenge.Core.Data.Models.AnalysisResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilesProcessedJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MostFrequentWordsJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProcessInfoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalCharacters")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalLines")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalWords")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProcessInfoId")
                        .IsUnique();

                    b.ToTable("Results");
                });

            modelBuilder.Entity("KineticTechnicalChallenge.Core.Data.Models.ProcessInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EstimatedCompletion")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilesJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Percentage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProcessedFiles")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalFiles")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("KineticTechnicalChallenge.Core.Data.Models.AnalysisResult", b =>
                {
                    b.HasOne("KineticTechnicalChallenge.Core.Data.Models.ProcessInfo", "ProcessInfo")
                        .WithOne("Results")
                        .HasForeignKey("KineticTechnicalChallenge.Core.Data.Models.AnalysisResult", "ProcessInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessInfo");
                });

            modelBuilder.Entity("KineticTechnicalChallenge.Core.Data.Models.ProcessInfo", b =>
                {
                    b.Navigation("Results")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
